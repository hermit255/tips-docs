name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install
      
    - name: Run linter
      run: npm run lint
      
    - name: Build application
      run: |
        echo "Starting build process..."
        set -e
        npm run build
        echo "Build completed successfully"
        echo "Checking build output..."
        ls -la .next/ || echo "No .next directory found"
      
    - name: List build output
      run: |
        echo "=== Build output directory structure ==="
        ls -la
        echo "=== .next directory contents ==="
        ls -la .next/ || echo ".next directory not found"
        echo "=== out directory contents ==="
        ls -la out/ || echo "out directory not found"
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: build-files
        path: .next/
        if-no-files-found: error
        retention-days: 7

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
      
    - name: Build and push Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository }}:latest
          ghcr.io/${{ github.repository }}:${{ github.sha }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

